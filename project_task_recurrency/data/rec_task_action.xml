<?xml version="1.0" encoding="utf-8"?>
<odoo>


    <record id="rec_proyect_task_auto" model="base.automation">
            <field name="name">=> Tareas Periódicas</field>
            <field name="model_id" ref="project.model_project_task"/>
            <field name="active" eval="True"/>
            <field name="state">code</field>
            <field name="code">
#  CREACIÓN DE SIGUIENTE TAREA SI ES PERIÓDICA Y SE ARCHIVA:
    #  Si se ha archivado, existe programación y no se ha hecho antes:
if (record.active == False) and (record.rec_period) and not (record.rec_next_task_id.id):
  # Fecha a partir de la cual calcular: base / hoy que archivamos
  if (record.rec_type == 'fechabase'):
    d1 = datetime.datetime.strptime(str(record.rec_date),'%Y-%m-%d').date()
  elif (record.rec_type == 'fechaarchivado'):
    d1 = datetime.datetime.now().astimezone(timezone('Europe/Madrid')).date()

    #  Si hay que calcular por meses:
  if (record.rec_period == 'meses'):
    sumaryear = int((record.rec_qty + d1.month - 0.1) / 12)
    if d1.day > 28:
      d1dia = 28
    else:
      d1dia = d1.day
    d2year = d1.year + sumaryear
    d2mes = d1.month + record.rec_qty - 12 * sumaryear
    if d2mes == 0: d2mes = 12
    proxfecha = datetime.date(d2year, d2mes, d1dia)

      # Si hay que calcular por dias:
  elif (record.rec_period == 'dias'):
    proxfecha = (d1 + datetime.timedelta(days=record.rec_qty))

      # Si es fin de mes calculamos en base al día uno del próximo mes para restar un día finalmente y conseguir 31,30,28 ó 29:
  elif (record.rec_period == 'findemes'):
    dia_uno = 1
    dia_uno_d1 = datetime.date(d1.year, d1.month, dia_uno)
    siguiente_mes = (dia_uno_d1 + datetime.timedelta(days=+31))
    dia_uno_siguiente_mes = datetime.date(siguiente_mes.year, siguiente_mes.month, dia_uno)
    sumaryear = int((record.rec_qty + dia_uno_siguiente_mes.month) / 12)
    d2year = dia_uno_siguiente_mes.year + sumaryear
    d2mes = dia_uno_siguiente_mes.month + record.rec_qty - 12 * sumaryear
    if d2mes == 0: d2mes = 12
    dia1_mes_siguiente_final = datetime.date(d2year, d2mes,dia_uno)
    proxfecha = (dia1_mes_siguiente_final + datetime.timedelta(days=-1))

      # Creamos la nueva tarea y la asignamos a la actual:
  nueva = env['project.task'].create({'name':record.name,
    'description':record.description,
    'project_id':record.project_id.id,
    'user_id':record.user_id.id,
    'date_deadline':proxfecha,
    'rec_type':record.rec_type,
    'rec_date':proxfecha,
    'rec_qty':record.rec_qty,
    'rec_period':record.rec_period
  })
  record['rec_next_task_id'] = nueva.id

            </field>
            <field name="trigger">on_create</field>

    </record>
</odoo>