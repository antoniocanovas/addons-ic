<?xml version="1.0" encoding="utf-8"?>
<odoo>

    <record id="calculate logistic margin" model="base.automation">
            <field name="name">=> Actualizar cantidades y margen en SOL </field>
            <field name="model_id" ref="fieldservice.model_fsm_order"/>
            <field name="active" eval="True"/>
            <field name="state">code</field>
            <field name="code">


sol = record.sale_line_id
coste = record.vehicle_id.fleet_vehicle_id.cost_per_km * record.km

# # # # # # # # # # # # # # #
# Actualizar valores en SOL:
# # # # # # # # # # # # # # #
if (sol.product_uom.category_id.id == 2) and (record.kg > 0):
  cantidad = 0
  cantidad = record.kg * sol.product_uom.factor
  sol['product_uom_qty'] = cantidad

# # # # # # # # # # #
# Cálculo del margen:
# # # # # # # # # # #
if sol.id:
    margen = sol.price_subtotal - coste
    if margen != sol.margin:
        sol['margin'] = margen
else:
    margen = 0 - coste
if margen != record.logistic_margin:
    record['logistic_margin'] = margen

            </field>
            <field name="trigger">on_create_or_write</field>
    </record>

    <record id="calculate account_analytic_line" model="base.automation">
            <field name="name">=> Línea de factura (general) </field>
            <field name="model_id" ref="analytic_enterprise.model_account_analytic_line"/>
            <field name="active" eval="True"/>
            <field name="state">code</field>
            <field name="code">

# Cada línea de factura puede corresponder a varias de venta aunque no debería usarse así porque queremos informe analítico por camión, debe ser único:
for liventa in record.sale_line_ids:
  if (not record.account_analytic_id.id) and (liventa.fsm_order_id.vehicle_id.id):
    record['account_analytic_id'] = liventa.fsm_order_id.vehicle_id.fleet_vehicle_id.analytic_id.id

            </field>
            <field name="trigger">on_create_or_write</field>
    </record>

</odoo>
